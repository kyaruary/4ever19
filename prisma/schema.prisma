// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // Uses connection pooling
  url       = env("POSTGRES_PRISMA_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Article {
  id         Int              @id @default(autoincrement())
  slug       String
  title      String
  preface    String           @default("")
  published  Boolean          @default(false)
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  category   Category         @relation(fields: [categoryId], references: [id])
  categoryId Int
  tags       TagsOnArticles[]
  pinned     Boolean          @default(false)
  cover      String?
}

model Tag {
  id       Int              @id @default(autoincrement())
  name     String
  articles TagsOnArticles[]
}

model TagsOnArticles {
  article   Article @relation(fields: [artilceId], references: [id])
  artilceId Int
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     Int

  @@id([artilceId, tagId])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  visible  Boolean
  articles Article[]
}
